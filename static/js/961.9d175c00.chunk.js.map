{"version":3,"file":"static/js/961.9d175c00.chunk.js","mappings":"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","sources":["components/contactsList/ContactsList.styled.jsx","components/hooks/useFilter.js","components/hooks/useContacts.js","components/contactItem/ContactItem.styled.jsx","components/hooks/useToggle.js","components/ChangeContact/ChangeContact.styled.jsx","components/ChangeContact/ChangeContact.jsx","components/BasicAvatar/BasicAvatar.jsx","components/Confirm/Confirm.jsx","components/contactItem/ContactItem.jsx","components/contactsList/ContactsList.jsx","components/hooks/useFilteredContacts.js","components/form/AddContactForm.styled.jsx","components/form/AddContactForm.jsx","pages/ContactsPage/Contacts.styled.jsx","pages/ContactsPage/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchInput = styled.input`\n  /* border-radius: 4px;\n  width: 200px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  margin: 0 auto;\n  height: 30px;\n  padding-left: 10px;\n  outline: none;\n  cursor: pointer; */\n`;\n\nexport const ContactList = styled.ul`\n  /* list-style: none;\n  margin: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n  padding-bottom: 20px; */\n`;\n\nexport const InputBox = styled.div`\n  text-align: center;\n  margin-bottom: 40px;\n  margin-top: 24px;\n`;\n\nexport const IsTitleListEmpty = styled.h2`\n  /* text-align: center; */\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nexport function useFilter() {\n  const filter = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  function onSetFilter(data) {\n    dispatch(setFilter(data));\n  }\n\n  return { filter, onSetFilter };\n}\n","import { useGetContactsQuery } from 'redux/contacts/contactsApi';\n\nexport function useContacts() {\n  const { data: contacts, isLoading, isFetching } = useGetContactsQuery();\n\n  return { contacts, isLoading, isFetching };\n}\n","import styled from 'styled-components';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { FaUserEdit } from 'react-icons/fa';\n\nexport const Item = styled.li`\n  display: flex;\n  text-align: center;\n  align-items: center;\n  padding-bottom: 5px;\n  border-bottom: 1px solid rgba(33, 33, 33, 0.2);\n  & + & {\n    margin-top: 20px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding-bottom: 10px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-left: 10px;\n  color: black;\n  @media screen and (min-width: 1200px) {\n    font-size: 22px;\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  background-color: transparent;\n  border: none;\n`;\n\nexport const EditSvg = styled(FaUserEdit)`\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  width: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 25px;\n  }\n`;\n\nexport const DeleteSvg = styled(RiDeleteBinLine)`\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  width: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 25px;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  height: 40px;\n  margin-left: auto;\n`;\n","import { useState } from 'react';\n\nexport default function useToggle() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [isConfirm, setIsConfirm] = useState(false);\n\n  function toggle() {\n    setIsOpen(state => !state);\n  }\n\n  function toggleConfirm() {\n    setIsConfirm(state => !state);\n  }\n\n  return { isOpen, setIsOpen, toggle, isConfirm, setIsConfirm, toggleConfirm };\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  font-family: inherit;\n  /* padding: 40px; */\n  text-align: center;\n`;\n","import React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport { useState } from 'react';\nimport { useUpdateContactMutation } from 'redux/contacts/contactsApi';\nimport { Button, TextField } from '@mui/material';\nimport { Form } from './ChangeContact.styled';\nimport { Notify } from 'notiflix';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useContacts } from '../hooks/useContacts';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  // width: 500,\n  // height: 350,\n  bgcolor: 'background.paper',\n  border: '1px solid rgb(21,101,192)',\n  borderRadius: 4,\n  boxShadow: 24,\n  p: 4,\n};\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: [\n      'Lucida Sans',\n      'Lucida Sans Regular',\n      'Lucida Grande',\n      'Lucida Sans Unicode',\n      'Geneva',\n      'Verdana',\n      'sans - serif',\n    ].join(','),\n    fontSize: 16,\n    // fontWeight: 200,\n  },\n});\n\nexport default function ChangeContact({\n  nameContact,\n  numberContact,\n  id,\n  open,\n  toggle,\n  setIsOpen,\n}) {\n  const { contacts } = useContacts();\n  const [updateContact] = useUpdateContactMutation();\n  const [name, setName] = useState(nameContact);\n  const [nameError, setNameError] = useState(false);\n  const [number, setNumber] = useState(numberContact);\n  const [numberError, setNumberError] = useState(false);\n\n  const numberEl = Number(number);\n\n  const options = { name: setName, number: setNumber };\n\n  function onChange({ target: { name, value } }) {\n    options[name](value);\n    setNumberError(false);\n    setNameError(false);\n  }\n\n  async function changeContact(e) {\n    e.preventDefault();\n    if (isDuplicateContact({ name })) {\n      setNameError(true);\n      return Notify.info(`${name} is already on your contact list`);\n    }\n\n    if (name === '' || number === '') {\n      return;\n    }\n\n    if (!numberEl) {\n      setNumberError(true);\n      return;\n    }\n\n    try {\n      await updateContact({ id, data: { name, number } });\n      Notify.success('Successfully');\n      setIsOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function isDuplicateContact({ name }) {\n    return contacts.find(contact => contact.name === name);\n  }\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={open}\n      // onClose={toggle}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={open}>\n        <Box sx={style}>\n          <Form onSubmit={changeContact}>\n            <ThemeProvider theme={theme}>\n              {nameError ? (\n                <div>\n                  <TextField\n                    style={{\n                      width: '300px',\n                      marginBottom: '20px',\n                      padding: '10px 0px 20px 0px',\n                    }}\n                    error\n                    id=\"standard-basic\"\n                    label=\"Name\"\n                    variant=\"standard\"\n                    onChange={onChange}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    helperText={`${name} is already on your contact list`}\n                  />\n                </div>\n              ) : (\n                <div>\n                  <TextField\n                    style={{\n                      width: '300px',\n                      marginBottom: '20px',\n                      padding: '10px 0px 20px 0px',\n                    }}\n                    id=\"standard-basic\"\n                    label=\"Name\"\n                    variant=\"standard\"\n                    onChange={onChange}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                  />\n                </div>\n              )}\n\n              {numberError ? (\n                <div>\n                  <TextField\n                    style={{\n                      width: '300px',\n                      // marginBottom: '30px',\n                      padding: '10px 0px 20px 0px',\n                    }}\n                    id=\"standard-basic\"\n                    error\n                    label=\"Number\"\n                    variant=\"standard\"\n                    onChange={onChange}\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    helperText=\"Should be a number.\"\n                  />\n                </div>\n              ) : (\n                <div>\n                  <TextField\n                    style={{\n                      width: '300px',\n                      // marginBottom: '30px',\n                      padding: '10px 0px 20px 0px',\n                    }}\n                    id=\"standard-basic\"\n                    label=\"Number\"\n                    variant=\"standard\"\n                    onChange={onChange}\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                  />\n                </div>\n              )}\n            </ThemeProvider>\n            <Button\n              style={{\n                marginRight: '10px',\n                marginTop: '20px',\n                width: '100px',\n              }}\n              variant=\"contained\"\n              type=\"submit\"\n            >\n              save\n            </Button>\n            <Button\n              style={{ marginTop: '20px', width: '100px' }}\n              variant=\"outlined\"\n              type=\"button\"\n              onClick={toggle}\n            >\n              cancel\n            </Button>\n          </Form>\n        </Box>\n      </Fade>\n    </Modal>\n  );\n}\n","import Avatar from '@mui/material/Avatar';\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  const nameSplit = name.split(' ');\n  return {\n    children:\n      name.length < 1\n        ? `${nameSplit[0][0]}${nameSplit[1][0]}`\n        : `${nameSplit[0][0]}`,\n  };\n}\n\nexport default function BasicAvatar({ name, sx = {}, ...props }) {\n  return (\n    <Avatar\n      sx={{ ...sx, bgcolor: stringToColor(name) }}\n      {...stringAvatar(name)}\n      {...props}\n    />\n  );\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide({\n  open,\n  setOpen,\n  title,\n  removeContact,\n  nameContact,\n}) {\n  // const [open, setOpen] = React.useState(false);\n\n  // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          Are you sure you want to delete <b>{nameContact}</b> from your contact\n          list?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={() => removeContact()}>\n          Yes\n        </Button>\n        <Button variant=\"outlined\" onClick={handleClose}>\n          No\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import PropTypes from 'prop-types';\nimport {\n  Item,\n  Text,\n  BtnDelete,\n  DeleteSvg,\n  EditSvg,\n  Box,\n} from './ContactItem.styled';\nimport { Notify } from 'notiflix';\nimport { memo } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport useToggle from 'components/hooks/useToggle';\nimport ChangeContact from 'components/ChangeContact/ChangeContact';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport BasicAvatar from 'components/BasicAvatar/BasicAvatar';\nimport AlertDialogSlide from 'components/Confirm/Confirm';\n\nfunction ContactItem({ name, number, id }) {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const { isOpen, setIsOpen, toggle, isConfirm, setIsConfirm, toggleConfirm } =\n    useToggle();\n\n  async function removeContact() {\n    setIsConfirm(false);\n    try {\n      await deleteContact(id);\n      Notify.info(`${name} has been deleted`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <>\n      <Item>\n        <BasicAvatar\n          name={name}\n          alt={name}\n          src=\"/static/images/avatar/2.jpg\"\n          sx={{ width: 50, height: 50 }}\n        />\n        <Text>\n          {name}: <a href={`tel:${number}`}>{number}</a>\n        </Text>\n        <ChangeContact\n          id={id}\n          nameContact={name}\n          numberContact={number}\n          open={isOpen}\n          toggle={toggle}\n          setIsOpen={setIsOpen}\n        />\n        {isLoading ? (\n          <Box>\n            <InfinitySpin width=\"100\" color=\"black\" />\n          </Box>\n        ) : (\n          <Box>\n            <BtnDelete type=\"button\" onClick={() => toggle()}>\n              <EditSvg />\n            </BtnDelete>\n            <BtnDelete type=\"button\" onClick={() => toggleConfirm()}>\n              <DeleteSvg />\n            </BtnDelete>\n          </Box>\n        )}\n        <AlertDialogSlide\n          open={isConfirm}\n          removeContact={() => removeContact(id)}\n          setOpen={setIsConfirm}\n          id={id}\n          nameContact={name}\n          title=\"Are you sure?\"\n        />\n      </Item>\n    </>\n  );\n}\n\nexport default memo(ContactItem);\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  removeContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { ContactList, InputBox, IsTitleListEmpty } from './ContactsList.styled';\nimport { useFilter } from 'components/hooks/useFilter';\nimport { useFilteredContacts } from 'components/hooks/useFilteredContacts';\nimport ContactItem from 'components/contactItem/ContactItem';\nimport TextField from '@mui/material/TextField';\n\nexport default function ContactsList() {\n  const { filter, onSetFilter } = useFilter();\n  const { getVisibleContacts } = useFilteredContacts();\n\n  function changeFilter(e) {\n    const { value } = e.currentTarget;\n    onSetFilter(value);\n  }\n\n  return (\n    <>\n      <InputBox>\n        <TextField\n          style={{\n            width: '300px',\n          }}\n          label=\"Search contact\"\n          variant=\"standard\"\n          value={filter}\n          onChange={changeFilter}\n        />\n      </InputBox>\n      {getVisibleContacts?.length === 0 ? (\n        <IsTitleListEmpty>Your contact list is empty :(</IsTitleListEmpty>\n      ) : (\n        <ContactList>\n          {getVisibleContacts\n            ?.map(({ name, id, number }) => {\n              return (\n                <ContactItem key={id} name={name} number={number} id={id} />\n              );\n            })\n            ?.sort((a, b) => a.props.name.localeCompare(b.props.name))}\n        </ContactList>\n      )}\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onChange: PropTypes.func,\n};\n","import { useMemo } from 'react';\nimport { useContacts } from './useContacts';\nimport { useFilter } from './useFilter';\n\nexport function useFilteredContacts() {\n  const { contacts } = useContacts();\n  const { filter } = useFilter();\n\n  const getVisibleContacts = useMemo(() => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  }, [contacts, filter]);\n\n  return { getVisibleContacts };\n}\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  @media screen and (min-width: 1200px) {\n    position: relative;\n    display: block;\n    text-align: center;\n    border: 1px solid rgb(21, 101, 192);\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 7px;\n    padding: 20px;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n    line-height: 1.16;\n    letter-spacing: 0.01em;\n    color: #757575;\n    margin-bottom: 4px;\n    margin-right: 10px;\n  }\n`;\n\nexport const FormInput = styled.input`\n  @media screen and (min-width: 1200px) {\n    border-radius: 4px;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    margin: 0 auto;\n    height: 30px;\n    padding-left: 10px;\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  @media screen and (min-width: 1200px) {\n    padding: 24px;\n    text-align: center;\n    width: 450px;\n    position: sticky;\n    top: 0;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  @media screen and (min-width: 1200px) {\n    width: 450px;\n  }\n`;\n\nexport const Btn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  box-sizing: border-box;\n  background-color: transparent;\n  outline: 0;\n  border: 0;\n  margin: 0;\n  border-radius: 0;\n  padding: 0;\n  cursor: pointer;\n  user-select: none;\n  vertical-align: middle;\n  text-decoration: none;\n  color: inherit;\n  font-weight: 500;\n  font-size: 1.125rem;\n  line-height: 1.75;\n  text-transform: uppercase;\n  width: 200px;\n  padding: 6px 16px;\n  border-radius: 4px;\n  color: #fff;\n  background-color: #1976d2;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%),\n    0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\n  margin-top: 10px;\n  color: #1565c0;\n  background: transparent;\n  border: 2px solid #1565c0;\n  &:hover {\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n      0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  }\n  @media screen and (min-width: 1200px) {\n    width: 300px;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  FormWrapper,\n  ButtonWrapper,\n  Wrapper,\n  Btn,\n} from './AddContactForm.styled';\nimport { useContacts } from 'components/hooks/useContacts';\nimport { Notify } from 'notiflix';\nimport { useAddContactMutation } from 'redux/contacts/contactsApi';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport useToggle from 'components/hooks/useToggle';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nexport default function AddContactForm() {\n  const { isOpen, toggle } = useToggle();\n  const [state, setState] = useState(initialState);\n  const NumberEl = Number(state.number);\n  const [nameError, setNameError] = useState(false);\n  const [numberError, setNumberError] = useState(false);\n  const { contacts } = useContacts();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    setState(prevState => {\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n    setNameError(false);\n    setNumberError(false);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const { name, number } = state;\n    if (isDuplicateContact({ name })) {\n      return Notify.info(`${name} is already on your contact list`);\n    }\n    if (name.trim() === '') {\n      setNameError(true);\n      return;\n    }\n    if (!NumberEl) {\n      setNumberError(true);\n      return;\n    }\n\n    try {\n      await addContact({ name, number });\n      Notify.success(`${name} added to your contact list`);\n      reset();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function isDuplicateContact({ name }) {\n    return contacts.find(contact => contact.name === name);\n  }\n\n  function reset() {\n    setState({ name: '', number: '' });\n  }\n\n  return (\n    <Wrapper>\n      <ButtonWrapper>\n        {!isOpen ? (\n          <Btn onClick={toggle} variant=\"contained\">\n            {isOpen ? 'Cancel' : 'add contact'}\n          </Btn>\n        ) : (\n          <FormWrapper onSubmit={handleSubmit}>\n            {nameError ? (\n              <div>\n                <TextField\n                  style={{ minWidth: '300px' }}\n                  // id=\"standard-basic\"\n                  error\n                  label=\"Name\"\n                  variant=\"standard\"\n                  onChange={handleChange}\n                  type=\"text\"\n                  name=\"name\"\n                  value={state.name}\n                  helperText=\"Name is required.\"\n                />\n              </div>\n            ) : (\n              <div>\n                <TextField\n                  style={{ minWidth: '300px' }}\n                  // id=\"standard-basic\"\n                  label=\"Name\"\n                  variant=\"standard\"\n                  onChange={handleChange}\n                  type=\"text\"\n                  name=\"name\"\n                  value={state.name}\n                />\n              </div>\n            )}\n            {numberError ? (\n              <div>\n                <TextField\n                  style={{\n                    minWidth: '300px',\n                  }}\n                  // id=\"standard-basic\"\n                  error\n                  label=\"Number\"\n                  variant=\"standard\"\n                  onChange={handleChange}\n                  type=\"tel\"\n                  name=\"number\"\n                  value={state.number}\n                  helperText=\"Should be a number.\"\n                />\n              </div>\n            ) : (\n              <div>\n                <TextField\n                  style={{\n                    minWidth: '300px',\n                  }}\n                  // id=\"standard-basic\"\n                  label=\"Number\"\n                  variant=\"standard\"\n                  onChange={handleChange}\n                  type=\"tel\"\n                  name=\"number\"\n                  value={state.number}\n                />\n              </div>\n            )}\n\n            <Button\n              style={{ marginRight: '10px', marginTop: '20px', width: '150px' }}\n              variant=\"contained\"\n              type=\"submit\"\n            >\n              {isLoading ? 'load' : 'Add '}\n            </Button>\n            <Button\n              style={{ marginTop: '20px', width: '150px' }}\n              variant=\"outlined\"\n              type=\"button\"\n              onClick={toggle}\n            >\n              cancel\n            </Button>\n          </FormWrapper>\n        )}\n      </ButtonWrapper>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  gap: 24px;\n  height: 100%;\n  @media screen and (min-width: 1200px) {\n    display: flex;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: center;\n  @media screen and (min-width: 1200px) {\n    border-right: 2px solid #757575;\n  }\n`;\n","import ContactsList from 'components/contactsList/ContactsList';\nimport AddContactForm from 'components/form/AddContactForm';\nimport Section from 'components/section/Section';\nimport React from 'react';\nimport { Wrapper, Box } from './Contacts.styled';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Section>\n        <Wrapper>\n          <Box>\n            <AddContactForm />\n          </Box>\n          <div style={{ flexGrow: '1' }}>\n            <ContactsList />\n          </div>\n        </Wrapper>\n      </Section>\n    </>\n  );\n}\n"],"names":["ContactList","styled","InputBox","IsTitleListEmpty","useFilter","filter","useSelector","state","value","dispatch","useDispatch","onSetFilter","data","setFilter","useContacts","useGetContactsQuery","contacts","isLoading","isFetching","Item","Text","BtnDelete","EditSvg","FaUserEdit","DeleteSvg","RiDeleteBinLine","Box","useToggle","useState","isOpen","setIsOpen","isConfirm","setIsConfirm","toggle","toggleConfirm","Form","style","position","top","left","transform","bgcolor","border","borderRadius","boxShadow","p","theme","createTheme","typography","fontFamily","join","fontSize","ChangeContact","nameContact","numberContact","id","open","useUpdateContactMutation","updateContact","name","setName","nameError","setNameError","number","setNumber","numberError","setNumberError","numberEl","Number","options","onChange","target","e","preventDefault","isDuplicateContact","Notify","console","log","find","contact","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","sx","onSubmit","ThemeProvider","TextField","width","marginBottom","padding","error","label","variant","type","helperText","Button","marginRight","marginTop","onClick","stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","BasicAvatar","props","Avatar","nameSplit","split","children","stringAvatar","Transition","React","ref","Slide","direction","AlertDialogSlide","setOpen","title","removeContact","handleClose","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","ContactItem","useDeleteContactMutation","deleteContact","alt","src","height","href","memo","ContactsList","getVisibleContacts","useMemo","normalizeFilter","toLowerCase","includes","useFilteredContacts","currentTarget","map","sort","a","b","localeCompare","FormWrapper","ButtonWrapper","Wrapper","Btn","initialState","AddContactForm","setState","NumberEl","useAddContactMutation","addContact","handleChange","prevState","trim","reset","minWidth","Contacts","Section","flexGrow"],"sourceRoot":""}