{"version":3,"file":"static/js/39.6ecac3b1.chunk.js","mappings":"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","sources":["components/ChangeContact/ChangeContact.jsx","components/section/Section.styled.jsx","components/section/Section.jsx","components/contactsList/ContactsList.styled.jsx","components/hooks/useFilter.js","components/hooks/useContacts.js","components/contactItem/ContactItem.styled.jsx","components/contactItem/ContactItem.jsx","components/hooks/useToggle.js","components/contactsList/ContactsList.jsx","components/hooks/useFilteredContacts.js","components/form/AddContactForm.styled.jsx","components/form/AddContactForm.jsx","pages/ContactsPage/Contacts.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useUpdateContactMutation } from 'redux/contacts/contactsApi';\n\nexport default function ChangeContact({ nameContact, numberContact, id }) {\n  const [updateContact] = useUpdateContactMutation();\n  const [name, setName] = useState(nameContact);\n  const [number, setNumber] = useState(numberContact);\n  const { contactId } = useParams();\n\n  const options = { name: setName, number: setNumber };\n\n  function onChange({ target: { name, value } }) {\n    options[name](value);\n  }\n\n  async function changeContact(e) {\n    e.preventDefault();\n\n    try {\n      await updateContact(contactId);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={changeContact}>\n        <input type=\"text\" name=\"name\" value={name} onChange={onChange} />\n        <input type=\"text\" name=\"number\" value={number} onChange={onChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const SectionBox = styled.section`\n  width: 1200px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n`;\n","import { SectionBox } from './Section.styled';\n\nexport default function Section({ children }) {\n  return <SectionBox>{children}</SectionBox>;\n}\n","import styled from 'styled-components';\n\nexport const TitleList = styled.h1`\n  margin-top: 0;\n  color: #757575;\n`;\n\nexport const SearchInput = styled.input`\n  border-radius: 4px;\n  width: 200px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  margin: 0 auto;\n  height: 30px;\n  padding-left: 10px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const ContactList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 25px;\n`;\n\nexport const InputBox = styled.div`\n  text-align: center;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nexport function useFilter() {\n  const filter = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  function onSetFilter(data) {\n    dispatch(setFilter(data));\n  }\n\n  return { filter, onSetFilter };\n}\n","import { useGetContactsQuery } from 'redux/contacts/contactsApi';\n\nexport function useContacts() {\n  const { data: contacts, isLoading, isFetching } = useGetContactsQuery();\n\n  return { contacts, isLoading, isFetching };\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  text-align: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(33, 33, 33, 0.2);\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  color: #757575;\n  font-size: 20px;\n`;\n\nexport const BtnDelete = styled.button`\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  font-size: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { Item, Text, BtnDelete } from './ContactItem.styled';\nimport { Notify } from 'notiflix';\nimport { memo } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport { Link } from 'react-router-dom';\nimport useToggle from 'components/hooks/useToggle';\nimport ChangeContact from 'components/ChangeContact/ChangeContact';\n\nfunction ContactItem({ name, number, id }) {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  // const { contactId } = useParams();\n  const { isOpen, toggle } = useToggle();\n  console.log(isOpen);\n\n  async function removeContact() {\n    try {\n      await deleteContact(id);\n      Notify.info(`${name} has been deleted`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <>\n      {isOpen && (\n        <ChangeContact id={id} nameContact={name} numberContact={number} />\n      )}\n      <Item>\n        <Text>\n          {name}: {number}\n        </Text>\n        <Link to={`contacts/${id}`} onClick={() => toggle()}>\n          change\n        </Link>\n        <BtnDelete type=\"button\" onClick={() => removeContact(id)}>\n          {isLoading ? 'remove' : <RiDeleteBinLine />}\n        </BtnDelete>\n      </Item>\n    </>\n  );\n}\n\nexport default memo(ContactItem);\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  removeContact: PropTypes.func,\n};\n","import { useState } from 'react';\n\nexport default function useToggle() {\n  const [isOpen, setIsOpen] = useState(false);\n  function toggle() {\n    setIsOpen(state => !state);\n  }\n\n  return { isOpen, toggle };\n}\n","import PropTypes from 'prop-types';\nimport {\n  // TitleList,\n  // SearchInput,\n  ContactList,\n  InputBox,\n} from './ContactsList.styled';\nimport { useFilter } from 'components/hooks/useFilter';\nimport { useFilteredContacts } from 'components/hooks/useFilteredContacts';\nimport ContactItem from 'components/contactItem/ContactItem';\nimport { useContacts } from 'components/hooks/useContacts';\nimport TextField from '@mui/material/TextField';\n\nexport default function ContactsList() {\n  const { filter, onSetFilter } = useFilter();\n  const { getVisibleContacts } = useFilteredContacts();\n  const { isFetching } = useContacts();\n\n  function changeFilter(e) {\n    const { value } = e.currentTarget;\n    onSetFilter(value);\n  }\n  return (\n    <>\n      {/* <TitleList>Contacts</TitleList> */}\n\n      {/* <SearchInput type=\"text\" value={filter} onChange={changeFilter} /> */}\n      <InputBox>\n        <TextField\n          label=\"Search contact\"\n          variant=\"standard\"\n          value={filter}\n          onChange={changeFilter}\n        />\n      </InputBox>\n      {isFetching && <div>...load</div>}\n      {getVisibleContacts?.length === 0 ? (\n        <div>zero</div>\n      ) : (\n        <ContactList>\n          {getVisibleContacts?.map(({ name, id, number }) => {\n            return <ContactItem key={id} name={name} number={number} id={id} />;\n          })}\n        </ContactList>\n      )}\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onChange: PropTypes.func,\n};\n","import { useMemo } from 'react';\nimport { useContacts } from './useContacts';\nimport { useFilter } from './useFilter';\n\nexport function useFilteredContacts() {\n  const { contacts } = useContacts();\n  const { filter } = useFilter();\n\n  const getVisibleContacts = useMemo(() => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  }, [contacts, filter]);\n\n  return { getVisibleContacts };\n}\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  display: block;\n  /* align-items: center; */\n  text-align: center;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 20px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: #757575;\n  margin-bottom: 4px;\n  margin-right: 10px;\n`;\n\nexport const FormInput = styled.input`\n  /* display: block; */\n  border-radius: 4px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  margin: 0 auto;\n  height: 30px;\n  padding-left: 10px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const FormButton = styled.button`\n  font-family: inherit;\n  width: 150px;\n  height: 40px;\n  color: #fff;\n  background-color: #2196f3;\n  font-size: 16px;\n  line-height: 1.87;\n  letter-spacing: 0.06em;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 4px;\n  border: transparent;\n  margin: 0 auto;\n  cursor: pointer;\n  transition: 250ms;\n  margin-top: 20px;\n  :hover {\n    color: #2196f3;\n    background-color: lightblue;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  FormWrapper,\n  // FormLabel,\n  // FormInput,\n  // FormButton,\n  // TextInput,\n  // Btn,\n} from './AddContactForm.styled';\nimport { useContacts } from 'components/hooks/useContacts';\nimport { Notify } from 'notiflix';\nimport { useAddContactMutation } from 'redux/contacts/contactsApi';\nimport Button from '@mui/material/Button';\n// import * as React from 'react';\n// import Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nexport default function AddContactForm() {\n  const [state, setState] = useState(initialState);\n  const { contacts } = useContacts();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    setState(prevState => {\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const { name, number } = state;\n    if (isDuplicateContact({ name, number })) {\n      return Notify.info(`${name}: ${number} is already on your contact list`);\n    }\n    try {\n      await addContact({ name, number });\n      Notify.success(`${name} added to your contact list`);\n      reset();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function isDuplicateContact({ name, number }) {\n    return contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n  }\n\n  function reset() {\n    setState({ name: '', number: '' });\n  }\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      {/* <FormLabel htmlFor=\"\">\n        Name:{' '}\n        <FormInput\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={state.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel> */}\n      <div>\n        <TextField\n          style={{ width: '300px' }}\n          id=\"standard-basic\"\n          label=\"Name\"\n          variant=\"standard\"\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={state.name}\n        />\n      </div>\n      {/* <FormLabel htmlFor=\"\">\n        Number:{' '}\n        <FormInput\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={state.number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel> */}\n      <div>\n        <TextField\n          style={{ width: '300px' }}\n          id=\"standard-basic\"\n          label=\"Number\"\n          variant=\"standard\"\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={state.number}\n        />\n      </div>\n      <Button\n        style={{ marginTop: '20px', width: '150px' }}\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        {isLoading ? 'load' : 'Add contact'}\n      </Button>\n      {/* <FormButton type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'load' : 'Add contact'}\n      </FormButton> */}\n    </FormWrapper>\n  );\n}\n","import ContactsList from 'components/contactsList/ContactsList';\nimport AddContactForm from 'components/form/AddContactForm';\nimport Section from 'components/section/Section';\nimport React from 'react';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Section>\n        <AddContactForm />\n      </Section>\n      <Section>\n        <ContactsList />\n      </Section>\n    </>\n  );\n}\n"],"names":["ChangeContact","nameContact","numberContact","id","useUpdateContactMutation","updateContact","useState","name","setName","number","setNumber","contactId","useParams","options","onChange","target","value","e","preventDefault","console","log","onSubmit","type","SectionBox","styled","Section","children","ContactList","InputBox","useFilter","filter","useSelector","state","dispatch","useDispatch","onSetFilter","data","setFilter","useContacts","useGetContactsQuery","contacts","isLoading","isFetching","Item","Text","BtnDelete","ContactItem","useDeleteContactMutation","deleteContact","isOpen","setIsOpen","toggle","useToggle","Notify","to","onClick","removeContact","memo","ContactsList","getVisibleContacts","useMemo","normalizeFilter","toLowerCase","contact","includes","useFilteredContacts","TextField","label","variant","currentTarget","length","map","FormWrapper","initialState","AddContactForm","setState","useAddContactMutation","addContact","handleChange","prevState","isDuplicateContact","reset","find","style","width","Button","marginTop","Contacts"],"sourceRoot":""}