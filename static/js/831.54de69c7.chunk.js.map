{"version":3,"file":"static/js/831.54de69c7.chunk.js","mappings":"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","sources":["components/section/Section.styled.jsx","components/section/Section.jsx","components/contactsList/ContactsList.styled.jsx","components/hooks/useFilter.js","components/hooks/useContacts.js","components/contactItem/ContactItem.styled.jsx","components/hooks/useToggle.js","components/ChangeContact/ChangeContact.jsx","components/contactItem/ContactItem.jsx","components/contactsList/ContactsList.jsx","components/hooks/useFilteredContacts.js","components/form/AddContactForm.styled.jsx","components/form/AddContactForm.jsx","pages/ContactsPage/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionBox = styled.section`\n  width: 1200px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n`;\n","import { SectionBox } from './Section.styled';\n\nexport default function Section({ children }) {\n  return <SectionBox>{children}</SectionBox>;\n}\n","import styled from 'styled-components';\n\nexport const SearchInput = styled.input`\n  border-radius: 4px;\n  width: 200px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  margin: 0 auto;\n  height: 30px;\n  padding-left: 10px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const ContactList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 25px;\n`;\n\nexport const InputBox = styled.div`\n  text-align: center;\n  margin-bottom: 40px;\n  margin-top: 40px;\n`;\n\nexport const IsTitleListEmpty = styled.h2`\n  text-align: center;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nexport function useFilter() {\n  const filter = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  function onSetFilter(data) {\n    dispatch(setFilter(data));\n  }\n\n  return { filter, onSetFilter };\n}\n","import { useGetContactsQuery } from 'redux/contacts/contactsApi';\n\nexport function useContacts() {\n  const { data: contacts, isLoading, isFetching } = useGetContactsQuery();\n\n  return { contacts, isLoading, isFetching };\n}\n","import styled from 'styled-components';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { FaUserEdit } from 'react-icons/fa';\n\nexport const Item = styled.li`\n  display: flex;\n  text-align: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(33, 33, 33, 0.2);\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  color: #757575;\n  font-size: 20px;\n`;\n\nexport const BtnDelete = styled.button`\n  background-color: transparent;\n  border: none;\n  /* height: 30px;\n  font-size: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  } */\n`;\n\nexport const EditSvg = styled(FaUserEdit)`\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  font-size: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  }\n`;\n\nexport const DeleteSvg = styled(RiDeleteBinLine)`\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  font-size: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  }\n`;\n","import { useState } from 'react';\n\nexport default function useToggle() {\n  const [isOpen, setIsOpen] = useState(false);\n  function toggle() {\n    setIsOpen(state => !state);\n  }\n\n  return { isOpen, setIsOpen, toggle };\n}\n","import React from 'react';\n// import { useState } from 'react';\n// import { useUpdateContactMutation } from 'redux/contacts/contactsApi';\n// import { useEffect } from 'react';\n// import Button from 'react-bootstrap/Button';\n// import Modal from 'react-bootstrap/Modal';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\n// import Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function ChangeContact({\n  nameContact,\n  numberContact,\n  id,\n  isOpen,\n  toggle,\n  setIsOpen,\n}) {\n  // const [open, setOpen] = React.useState(false);\n  // const handleOpen = () => setOpen(true);\n  // const handleClose = () => setOpen(false);\n  // const [show, setShow] = useState(false);\n\n  // const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n  // const [updateContact] = useUpdateContactMutation();\n  // const [name, setName] = useState(nameContact);\n  // const [number, setNumber] = useState(numberContact);\n\n  // const options = { name: setName, number: setNumber };\n\n  // function onChange({ target: { name, value } }) {\n  //   options[name](value);\n  // }\n\n  // async function changeContact(e) {\n  //   e.preventDefault();\n\n  //   try {\n  //     await updateContact({ id, data: { name, number } });\n  //     setIsOpen(false);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   document.addEventListener('keydown', onKeyDown);\n  //   return () => {\n  //     document.removeEventListener('keydown', onKeyDown);\n  //   };\n  // });\n\n  // function onKeyDown(e) {\n  //   if (e.code !== 'Escape') {\n  //     return;\n  //   }\n  //   toggle();\n  // }\n\n  // function clickOnBackdrop(e) {\n  //   if (e.target === e.currentTarget) {\n  //     toggle();\n  //   }\n  // }\n\n  return (\n    <div>\n      {/* <Button onClick={handleOpen}>Open modal</Button> */}\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={isOpen}\n        onClose={toggle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={isOpen}>\n          <Box sx={style}>\n            <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n              Text in a modal\n            </Typography>\n            <Typography id=\"transition-modal-description\" sx={{ mt: 2 }}>\n              Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n            </Typography>\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n    // <>\n    //   <Modal show={isOpen} onHide={toggle}>\n    //     <Modal.Header closeButton>\n    //       <Modal.Title>Modal heading</Modal.Title>\n    //     </Modal.Header>\n    //     <Modal.Body>\n    //       <form onSubmit={changeContact}>\n    //         <input type=\"text\" name=\"name\" value={name} onChange={onChange} />\n    //         <input\n    //           type=\"text\"\n    //           name=\"number\"\n    //           value={number}\n    //           onChange={onChange}\n    //         />\n    //       </form>\n    //     </Modal.Body>\n    //     <Modal.Footer>\n    //       <Button variant=\"primary\" onClick={changeContact}>\n    //         Save Changes\n    //       </Button>\n    //       <Button variant=\"secondary\" onClick={toggle}>\n    //         Close\n    //       </Button>\n    //     </Modal.Footer>\n    //   </Modal>\n    // </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport {\n  Item,\n  Text,\n  BtnDelete,\n  DeleteSvg,\n  EditSvg,\n} from './ContactItem.styled';\nimport { Notify } from 'notiflix';\nimport { memo } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport useToggle from 'components/hooks/useToggle';\nimport ChangeContact from 'components/ChangeContact/ChangeContact';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nfunction ContactItem({ name, number, id }) {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const { isOpen, setIsOpen, toggle } = useToggle();\n\n  async function removeContact() {\n    try {\n      await deleteContact(id);\n      Notify.info(`${name} has been deleted`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <>\n      {isOpen && (\n        <ChangeContact\n          id={id}\n          nameContact={name}\n          numberContact={number}\n          isOpen={isOpen}\n          toggle={toggle}\n          setIsOpen={setIsOpen}\n        />\n      )}\n      <Item>\n        <Text>\n          {name}: {number}\n        </Text>\n        {isLoading ? (\n          <InfinitySpin color=\"black\" width=\"100\" />\n        ) : (\n          <div>\n            <BtnDelete type=\"button\" onClick={() => toggle()}>\n              <EditSvg />\n            </BtnDelete>\n            <BtnDelete type=\"button\" onClick={() => removeContact(id)}>\n              <DeleteSvg />\n            </BtnDelete>\n          </div>\n        )}\n      </Item>\n    </>\n  );\n}\n\nexport default memo(ContactItem);\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  removeContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { ContactList, InputBox, IsTitleListEmpty } from './ContactsList.styled';\nimport { useFilter } from 'components/hooks/useFilter';\nimport { useFilteredContacts } from 'components/hooks/useFilteredContacts';\nimport ContactItem from 'components/contactItem/ContactItem';\nimport TextField from '@mui/material/TextField';\n\nexport default function ContactsList() {\n  const { filter, onSetFilter } = useFilter();\n  const { getVisibleContacts } = useFilteredContacts();\n\n  function changeFilter(e) {\n    const { value } = e.currentTarget;\n    onSetFilter(value);\n  }\n\n  return (\n    <>\n      <InputBox>\n        <TextField\n          label=\"Search contact\"\n          variant=\"standard\"\n          value={filter}\n          onChange={changeFilter}\n        />\n      </InputBox>\n      {getVisibleContacts?.length === 0 ? (\n        <IsTitleListEmpty>Your contact list is empty :(</IsTitleListEmpty>\n      ) : (\n        <ContactList>\n          {getVisibleContacts?.map(({ name, id, number }) => {\n            return <ContactItem key={id} name={name} number={number} id={id} />;\n          })}\n        </ContactList>\n      )}\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onChange: PropTypes.func,\n};\n","import { useMemo } from 'react';\nimport { useContacts } from './useContacts';\nimport { useFilter } from './useFilter';\n\nexport function useFilteredContacts() {\n  const { contacts } = useContacts();\n  const { filter } = useFilter();\n\n  const getVisibleContacts = useMemo(() => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  }, [contacts, filter]);\n\n  return { getVisibleContacts };\n}\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  display: block;\n  text-align: center;\n  border: 2px solid rgb(21, 101, 192);\n  margin-left: auto;\n  margin-right: auto;\n  width: 400px;\n  height: 200px;\n  border-radius: 7px;\n  margin-top: 20px;\n  padding: 20px;\n  position: relative;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 20px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: #757575;\n  margin-bottom: 4px;\n  margin-right: 10px;\n`;\n\nexport const FormInput = styled.input`\n  /* display: block; */\n  border-radius: 4px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  margin: 0 auto;\n  height: 30px;\n  padding-left: 10px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const ButtonWrapper = styled.div`\n  padding-top: 40px;\n  text-align: center;\n`;\n","import { useState } from 'react';\nimport { FormWrapper, ButtonWrapper } from './AddContactForm.styled';\nimport { useContacts } from 'components/hooks/useContacts';\nimport { Notify } from 'notiflix';\nimport { useAddContactMutation } from 'redux/contacts/contactsApi';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport useToggle from 'components/hooks/useToggle';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nexport default function AddContactForm() {\n  const { isOpen, toggle } = useToggle();\n  const [state, setState] = useState(initialState);\n  const { contacts } = useContacts();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    setState(prevState => {\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const { name, number } = state;\n    if (name === '' || number === '') {\n      return;\n    }\n    if (isDuplicateContact({ name, number })) {\n      return Notify.info(`${name}: ${number} is already on your contact list`);\n    }\n    try {\n      await addContact({ name, number });\n      Notify.success(`${name} added to your contact list`);\n      reset();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function isDuplicateContact({ name, number }) {\n    return contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n  }\n\n  function reset() {\n    setState({ name: '', number: '' });\n  }\n\n  return (\n    <>\n      <ButtonWrapper>\n        {!isOpen && (\n          <Button\n            style={{\n              width: '300px',\n              color: '#1565c0',\n              background: 'transparent',\n              border: '2px solid #1565c0',\n            }}\n            onClick={toggle}\n            variant=\"contained\"\n          >\n            {isOpen ? 'Cancel' : 'add contact'}\n          </Button>\n        )}\n      </ButtonWrapper>\n      {isOpen && (\n        <FormWrapper onSubmit={handleSubmit}>\n          <div>\n            <TextField\n              style={{ width: '300px' }}\n              id=\"standard-basic\"\n              label=\"Name\"\n              variant=\"standard\"\n              onChange={handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={state.name}\n            />\n          </div>\n          <div>\n            <TextField\n              style={{\n                width: '300px',\n              }}\n              id=\"standard-basic\"\n              label=\"Number\"\n              variant=\"standard\"\n              onChange={handleChange}\n              type=\"tel\"\n              name=\"number\"\n              value={state.number}\n            />\n          </div>\n          <Button\n            style={{ marginTop: '20px', marginRight: '10px', width: '150px' }}\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            {isLoading ? 'load' : 'Add contact'}\n          </Button>\n          <Button\n            style={{ marginTop: '20px', width: '150px' }}\n            variant=\"outlined\"\n            type=\"submit\"\n            onClick={toggle}\n          >\n            cancel\n          </Button>\n        </FormWrapper>\n      )}\n    </>\n  );\n}\n","import ContactsList from 'components/contactsList/ContactsList';\nimport AddContactForm from 'components/form/AddContactForm';\nimport Section from 'components/section/Section';\nimport React from 'react';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Section>\n        <AddContactForm />\n      </Section>\n      <Section>\n        <ContactsList />\n      </Section>\n    </>\n  );\n}\n"],"names":["SectionBox","styled","Section","children","ContactList","InputBox","IsTitleListEmpty","useFilter","filter","useSelector","state","value","dispatch","useDispatch","onSetFilter","data","setFilter","useContacts","useGetContactsQuery","contacts","isLoading","isFetching","Item","Text","BtnDelete","EditSvg","FaUserEdit","DeleteSvg","RiDeleteBinLine","useToggle","useState","isOpen","setIsOpen","toggle","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","ChangeContact","nameContact","numberContact","id","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","sx","Typography","variant","component","mt","ContactItem","name","number","useDeleteContactMutation","deleteContact","Notify","console","log","color","type","onClick","removeContact","memo","ContactsList","getVisibleContacts","useMemo","normalizeFilter","toLowerCase","contact","includes","useFilteredContacts","TextField","label","onChange","e","currentTarget","length","map","FormWrapper","ButtonWrapper","initialState","AddContactForm","setState","useAddContactMutation","addContact","handleChange","prevState","preventDefault","isDuplicateContact","reset","find","Button","background","onSubmit","marginTop","marginRight","Contacts"],"sourceRoot":""}