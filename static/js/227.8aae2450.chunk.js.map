{"version":3,"file":"static/js/227.8aae2450.chunk.js","mappings":"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","sources":["components/section/Section.styled.jsx","components/section/Section.jsx","components/contactsList/ContactsList.styled.jsx","components/hooks/useFilter.js","components/hooks/useContacts.js","components/contactItem/ContactItem.styled.jsx","components/ChangeContact/ChangeContact.styled.jsx","components/ChangeContact/ChangeContact.jsx","components/contactItem/ContactItem.jsx","components/hooks/useToggle.js","components/contactsList/ContactsList.jsx","components/hooks/useFilteredContacts.js","components/form/AddContactForm.styled.jsx","components/form/AddContactForm.jsx","pages/ContactsPage/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionBox = styled.section`\n  width: 1200px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n`;\n","import { SectionBox } from './Section.styled';\n\nexport default function Section({ children }) {\n  return <SectionBox>{children}</SectionBox>;\n}\n","import styled from 'styled-components';\n\nexport const SearchInput = styled.input`\n  border-radius: 4px;\n  width: 200px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  margin: 0 auto;\n  height: 30px;\n  padding-left: 10px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const ContactList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 25px;\n`;\n\nexport const InputBox = styled.div`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const IsTitleListEmpty = styled.h2`\n  text-align: center;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nexport function useFilter() {\n  const filter = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  function onSetFilter(data) {\n    dispatch(setFilter(data));\n  }\n\n  return { filter, onSetFilter };\n}\n","import { useGetContactsQuery } from 'redux/contacts/contactsApi';\n\nexport function useContacts() {\n  const { data: contacts, isLoading, isFetching } = useGetContactsQuery();\n\n  return { contacts, isLoading, isFetching };\n}\n","import styled from 'styled-components';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { FaUserEdit } from 'react-icons/fa';\n\nexport const Item = styled.li`\n  display: flex;\n  text-align: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(33, 33, 33, 0.2);\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  color: #757575;\n  font-size: 20px;\n`;\n\nexport const BtnDelete = styled.button`\n  background-color: transparent;\n  border: none;\n  /* height: 30px;\n  font-size: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  } */\n`;\n\nexport const EditSvg = styled(FaUserEdit)`\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  font-size: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  }\n`;\n\nexport const DeleteSvg = styled(RiDeleteBinLine)`\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  font-size: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.2);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useUpdateContactMutation } from 'redux/contacts/contactsApi';\nimport { createPortal } from 'react-dom';\nimport { Overlay, Modal } from './ChangeContact.styled';\nimport { useEffect } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function ChangeContact({\n  nameContact,\n  numberContact,\n  id,\n  isOpen,\n  toggle,\n}) {\n  const [updateContact] = useUpdateContactMutation();\n  const [name, setName] = useState(nameContact);\n  const [number, setNumber] = useState(numberContact);\n\n  const options = { name: setName, number: setNumber };\n\n  function onChange({ target: { name, value } }) {\n    options[name](value);\n  }\n\n  async function changeContact(e) {\n    e.preventDefault();\n\n    try {\n      await updateContact({ id, data: { name, number } });\n      isOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyDown);\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  });\n\n  function onKeyDown(e) {\n    if (e.code !== 'Escape') {\n      return;\n    }\n    toggle();\n  }\n\n  function clickOnBackdrop(e) {\n    if (e.target === e.currentTarget) {\n      toggle();\n    }\n  }\n\n  return createPortal(\n    <Overlay onClick={clickOnBackdrop}>\n      <Modal>\n        <form onSubmit={changeContact}>\n          <input type=\"text\" name=\"name\" value={name} onChange={onChange} />\n          <input type=\"text\" name=\"number\" value={number} onChange={onChange} />\n          <button type=\"submit\">save</button>\n        </form>\n      </Modal>\n    </Overlay>,\n    modalRoot\n  );\n}\n","import PropTypes from 'prop-types';\nimport {\n  Item,\n  Text,\n  BtnDelete,\n  DeleteSvg,\n  EditSvg,\n} from './ContactItem.styled';\nimport { Notify } from 'notiflix';\nimport { memo } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport useToggle from 'components/hooks/useToggle';\nimport ChangeContact from 'components/ChangeContact/ChangeContact';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nfunction ContactItem({ name, number, id }) {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const { isOpen, setIsOpen, toggle } = useToggle();\n\n  async function removeContact() {\n    try {\n      await deleteContact(id);\n      Notify.info(`${name} has been deleted`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <>\n      {isOpen && (\n        <ChangeContact\n          id={id}\n          nameContact={name}\n          numberContact={number}\n          isOpen={setIsOpen}\n          toggle={toggle}\n          setIsOpen={setIsOpen}\n        />\n      )}\n      <Item>\n        <Text>\n          {name}: {number}\n        </Text>\n        {isLoading ? (\n          <InfinitySpin color=\"black\" width=\"100\" />\n        ) : (\n          <div>\n            <BtnDelete type=\"button\" onClick={() => toggle()}>\n              <EditSvg />\n            </BtnDelete>\n            <BtnDelete type=\"button\" onClick={() => removeContact(id)}>\n              <DeleteSvg />\n            </BtnDelete>\n          </div>\n        )}\n      </Item>\n    </>\n  );\n}\n\nexport default memo(ContactItem);\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  removeContact: PropTypes.func,\n};\n","import { useState } from 'react';\n\nexport default function useToggle() {\n  const [isOpen, setIsOpen] = useState(false);\n  function toggle() {\n    setIsOpen(state => !state);\n  }\n\n  return { isOpen, setIsOpen, toggle };\n}\n","import PropTypes from 'prop-types';\nimport { ContactList, InputBox, IsTitleListEmpty } from './ContactsList.styled';\nimport { useFilter } from 'components/hooks/useFilter';\nimport { useFilteredContacts } from 'components/hooks/useFilteredContacts';\nimport ContactItem from 'components/contactItem/ContactItem';\nimport TextField from '@mui/material/TextField';\n\nexport default function ContactsList() {\n  const { filter, onSetFilter } = useFilter();\n  const { getVisibleContacts } = useFilteredContacts();\n\n  function changeFilter(e) {\n    const { value } = e.currentTarget;\n    onSetFilter(value);\n  }\n\n  return (\n    <>\n      <InputBox>\n        <TextField\n          label=\"Search contact\"\n          variant=\"standard\"\n          value={filter}\n          onChange={changeFilter}\n        />\n      </InputBox>\n      {getVisibleContacts?.length === 0 ? (\n        <IsTitleListEmpty>Your contact list is empty :(</IsTitleListEmpty>\n      ) : (\n        <ContactList>\n          {getVisibleContacts?.map(({ name, id, number }) => {\n            return <ContactItem key={id} name={name} number={number} id={id} />;\n          })}\n        </ContactList>\n      )}\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onChange: PropTypes.func,\n};\n","import { useMemo } from 'react';\nimport { useContacts } from './useContacts';\nimport { useFilter } from './useFilter';\n\nexport function useFilteredContacts() {\n  const { contacts } = useContacts();\n  const { filter } = useFilter();\n\n  const getVisibleContacts = useMemo(() => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  }, [contacts, filter]);\n\n  return { getVisibleContacts };\n}\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  display: block;\n  /* align-items: center; */\n  text-align: center;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 20px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: #757575;\n  margin-bottom: 4px;\n  margin-right: 10px;\n`;\n\nexport const FormInput = styled.input`\n  /* display: block; */\n  border-radius: 4px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  margin: 0 auto;\n  height: 30px;\n  padding-left: 10px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const FormButton = styled.button`\n  font-family: inherit;\n  width: 150px;\n  height: 40px;\n  color: #fff;\n  background-color: #2196f3;\n  font-size: 16px;\n  line-height: 1.87;\n  letter-spacing: 0.06em;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 4px;\n  border: transparent;\n  margin: 0 auto;\n  cursor: pointer;\n  transition: 250ms;\n  margin-top: 20px;\n  :hover {\n    color: #2196f3;\n    background-color: lightblue;\n  }\n`;\n","import { useState } from 'react';\nimport { FormWrapper } from './AddContactForm.styled';\nimport { useContacts } from 'components/hooks/useContacts';\nimport { Notify } from 'notiflix';\nimport { useAddContactMutation } from 'redux/contacts/contactsApi';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nexport default function AddContactForm() {\n  const [state, setState] = useState(initialState);\n  const { contacts } = useContacts();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    setState(prevState => {\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const { name, number } = state;\n    if (name === '' || number === '') {\n      return;\n    }\n    if (isDuplicateContact({ name, number })) {\n      return Notify.info(`${name}: ${number} is already on your contact list`);\n    }\n    try {\n      await addContact({ name, number });\n      Notify.success(`${name} added to your contact list`);\n      reset();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function isDuplicateContact({ name, number }) {\n    return contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n  }\n\n  function reset() {\n    setState({ name: '', number: '' });\n  }\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <div>\n        <TextField\n          style={{ width: '300px' }}\n          id=\"standard-basic\"\n          label=\"Name\"\n          variant=\"standard\"\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={state.name}\n        />\n      </div>\n      <div>\n        <TextField\n          style={{\n            width: '300px',\n          }}\n          id=\"standard-basic\"\n          label=\"Number\"\n          variant=\"standard\"\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={state.number}\n        />\n      </div>\n      <Button\n        style={{ marginTop: '20px', width: '150px' }}\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        {isLoading ? 'load' : 'Add contact'}\n      </Button>\n    </FormWrapper>\n  );\n}\n","import ContactsList from 'components/contactsList/ContactsList';\nimport AddContactForm from 'components/form/AddContactForm';\nimport Section from 'components/section/Section';\nimport React from 'react';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Section>\n        <AddContactForm />\n      </Section>\n      <Section>\n        <ContactsList />\n      </Section>\n    </>\n  );\n}\n"],"names":["SectionBox","styled","Section","children","ContactList","InputBox","IsTitleListEmpty","useFilter","filter","useSelector","state","value","dispatch","useDispatch","onSetFilter","data","setFilter","useContacts","useGetContactsQuery","contacts","isLoading","isFetching","Item","Text","BtnDelete","EditSvg","FaUserEdit","DeleteSvg","RiDeleteBinLine","Overlay","Modal","modalRoot","document","querySelector","ChangeContact","nameContact","numberContact","id","isOpen","toggle","useUpdateContactMutation","updateContact","useState","name","setName","number","options","onChange","target","e","preventDefault","console","log","onKeyDown","code","useEffect","addEventListener","removeEventListener","createPortal","onClick","currentTarget","onSubmit","type","ContactItem","useDeleteContactMutation","deleteContact","setIsOpen","useToggle","Notify","color","width","removeContact","memo","ContactsList","getVisibleContacts","useMemo","normalizeFilter","toLowerCase","contact","includes","useFilteredContacts","TextField","label","variant","length","map","FormWrapper","initialState","AddContactForm","setState","useAddContactMutation","addContact","handleChange","prevState","isDuplicateContact","reset","find","style","Button","marginTop","Contacts"],"sourceRoot":""}