{"version":3,"file":"static/js/307.b61f8f79.chunk.js","mappings":"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","sources":["components/contactsList/ContactsList.styled.jsx","components/hooks/useFilter.js","components/hooks/useContacts.js","components/contactItem/ContactItem.styled.jsx","components/hooks/useToggle.js","components/ChangeContact/ChangeContact.styled.jsx","components/ChangeContact/ChangeContact.jsx","components/BasicAvatar/BasicAvatar.jsx","components/contactItem/ContactItem.jsx","components/contactsList/ContactsList.jsx","components/hooks/useFilteredContacts.js","components/form/AddContactForm.styled.jsx","components/form/AddContactForm.jsx","pages/ContactsPage/Contacts.styled.jsx","pages/ContactsPage/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchInput = styled.input`\n  /* border-radius: 4px;\n  width: 200px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  margin: 0 auto;\n  height: 30px;\n  padding-left: 10px;\n  outline: none;\n  cursor: pointer; */\n`;\n\nexport const ContactList = styled.ul`\n  /* list-style: none;\n  margin: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n  padding-bottom: 20px; */\n`;\n\nexport const InputBox = styled.div`\n  text-align: center;\n  margin-bottom: 40px;\n  margin-top: 24px;\n`;\n\nexport const IsTitleListEmpty = styled.h2`\n  /* text-align: center; */\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nexport function useFilter() {\n  const filter = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  function onSetFilter(data) {\n    dispatch(setFilter(data));\n  }\n\n  return { filter, onSetFilter };\n}\n","import { useGetContactsQuery } from 'redux/contacts/contactsApi';\n\nexport function useContacts() {\n  const { data: contacts, isLoading, isFetching } = useGetContactsQuery();\n\n  return { contacts, isLoading, isFetching };\n}\n","import styled from 'styled-components';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { FaUserEdit } from 'react-icons/fa';\n\nexport const Item = styled.li`\n  display: flex;\n  text-align: center;\n  align-items: center;\n  border-bottom: 1px solid rgba(33, 33, 33, 0.2);\n  & + & {\n    margin-top: 20px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding-bottom: 10px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-left: 10px;\n  @media screen and (min-width: 1200px) {\n    color: #757575;\n    font-size: 22px;\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  background-color: transparent;\n  border: none;\n`;\n\nexport const EditSvg = styled(FaUserEdit)`\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  width: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 25px;\n  }\n`;\n\nexport const DeleteSvg = styled(RiDeleteBinLine)`\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  width: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 25px;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  height: 40px;\n  margin-left: auto;\n`;\n","import { useState } from 'react';\n\nexport default function useToggle() {\n  const [isOpen, setIsOpen] = useState(false);\n  function toggle() {\n    setIsOpen(state => !state);\n  }\n\n  return { isOpen, setIsOpen, toggle };\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  font-family: inherit;\n  /* padding: 40px; */\n  text-align: center;\n`;\n","import React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport { useState } from 'react';\nimport { useUpdateContactMutation } from 'redux/contacts/contactsApi';\nimport { Button, TextField } from '@mui/material';\nimport { Form } from './ChangeContact.styled';\nimport { Notify } from 'notiflix';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 500,\n  height: 350,\n  bgcolor: 'background.paper',\n  border: '1px solid rgb(21,101,192)',\n  borderRadius: 4,\n  boxShadow: 24,\n  p: 4,\n};\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: [\n      'Lucida Sans',\n      'Lucida Sans Regular',\n      'Lucida Grande',\n      'Lucida Sans Unicode',\n      'Geneva',\n      'Verdana',\n      'sans - serif',\n    ].join(','),\n    fontSize: 23,\n    // fontWeight: 200,\n  },\n});\n\nexport default function ChangeContact({\n  nameContact,\n  numberContact,\n  id,\n  isOpen,\n  toggle,\n  setIsOpen,\n}) {\n  const [updateContact] = useUpdateContactMutation();\n  const [name, setName] = useState(nameContact);\n  const [number, setNumber] = useState(numberContact);\n\n  const options = { name: setName, number: setNumber };\n\n  function onChange({ target: { name, value } }) {\n    options[name](value);\n  }\n\n  async function changeContact(e) {\n    e.preventDefault();\n    if (name === '') {\n      return;\n    }\n    if (number === '') {\n      return;\n    }\n\n    try {\n      await updateContact({ id, data: { name, number } });\n      Notify.success('Successfully');\n      setIsOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          open={isOpen}\n          onClose={toggle}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={isOpen}>\n            <Box sx={style}>\n              <Form onSubmit={changeContact}>\n                <ThemeProvider theme={theme}>\n                  <div>\n                    <TextField\n                      style={{\n                        width: '300px',\n                        marginBottom: '20px',\n                        padding: '10px 0px 20px 0px',\n                      }}\n                      id=\"standard-basic\"\n                      label=\"Name\"\n                      variant=\"standard\"\n                      onChange={onChange}\n                      type=\"text\"\n                      name=\"name\"\n                      value={name}\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      style={{\n                        width: '300px',\n                        // marginBottom: '30px',\n                        padding: '10px 0px 20px 0px',\n                      }}\n                      id=\"standard-basic\"\n                      label=\"Number\"\n                      variant=\"standard\"\n                      onChange={onChange}\n                      type=\"tel\"\n                      name=\"number\"\n                      value={number}\n                    />\n                  </div>\n                </ThemeProvider>\n                <Button\n                  style={{\n                    marginRight: '10px',\n                    marginTop: '20px',\n                    width: '100px',\n                  }}\n                  variant=\"contained\"\n                  type=\"submit\"\n                >\n                  save\n                </Button>\n                <Button\n                  style={{ marginTop: '20px', width: '100px' }}\n                  variant=\"outlined\"\n                  type=\"button\"\n                  onClick={toggle}\n                >\n                  cancel\n                </Button>\n              </Form>\n            </Box>\n          </Fade>\n        </Modal>\n      </div>\n    </>\n  );\n}\n","import Avatar from '@mui/material/Avatar';\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  const nameSplit = name.split(' ');\n  return {\n    children:\n      name.length < 1\n        ? `${nameSplit[0][0]}${nameSplit[1][0]}`\n        : `${nameSplit[0][0]}`,\n  };\n}\n\nexport default function BasicAvatar({ name, sx = {}, ...props }) {\n  return (\n    <Avatar\n      sx={{ ...sx, bgcolor: stringToColor(name) }}\n      {...stringAvatar(name)}\n      {...props}\n    />\n  );\n}\n","import PropTypes from 'prop-types';\nimport {\n  Item,\n  Text,\n  BtnDelete,\n  DeleteSvg,\n  EditSvg,\n  Box,\n} from './ContactItem.styled';\nimport { Notify } from 'notiflix';\nimport { memo } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport useToggle from 'components/hooks/useToggle';\nimport ChangeContact from 'components/ChangeContact/ChangeContact';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport BasicAvatar from 'components/BasicAvatar/BasicAvatar';\n\nfunction ContactItem({ name, number, id }) {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const { isOpen, setIsOpen, toggle } = useToggle();\n\n  async function removeContact() {\n    try {\n      await deleteContact(id);\n      Notify.info(`${name} has been deleted`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <>\n      <Item>\n        <BasicAvatar\n          name={name}\n          alt={name}\n          src=\"/static/images/avatar/2.jpg\"\n          sx={{ width: 25, height: 25 }}\n        />\n        <Text>\n          {name}: <a href={`tel:${number}`}>{number}</a>\n        </Text>\n        <div>\n          {isOpen && (\n            <ChangeContact\n              id={id}\n              nameContact={name}\n              numberContact={number}\n              isOpen={isOpen}\n              toggle={toggle}\n              setIsOpen={setIsOpen}\n            />\n          )}\n        </div>\n        {isLoading ? (\n          <Box>\n            <InfinitySpin width=\"100\" color=\"black\" />\n          </Box>\n        ) : (\n          <Box>\n            <BtnDelete type=\"button\" onClick={() => toggle()}>\n              <EditSvg />\n            </BtnDelete>\n            <BtnDelete type=\"button\" onClick={() => removeContact(id)}>\n              <DeleteSvg />\n            </BtnDelete>\n          </Box>\n        )}\n      </Item>\n    </>\n  );\n}\n\nexport default memo(ContactItem);\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  removeContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { ContactList, InputBox, IsTitleListEmpty } from './ContactsList.styled';\nimport { useFilter } from 'components/hooks/useFilter';\nimport { useFilteredContacts } from 'components/hooks/useFilteredContacts';\nimport ContactItem from 'components/contactItem/ContactItem';\nimport TextField from '@mui/material/TextField';\n\nexport default function ContactsList() {\n  const { filter, onSetFilter } = useFilter();\n  const { getVisibleContacts } = useFilteredContacts();\n\n  function changeFilter(e) {\n    const { value } = e.currentTarget;\n    onSetFilter(value);\n  }\n\n  return (\n    <>\n      <InputBox>\n        <TextField\n          style={{\n            width: '200px',\n          }}\n          label=\"Search contact\"\n          variant=\"standard\"\n          value={filter}\n          onChange={changeFilter}\n        />\n      </InputBox>\n      {getVisibleContacts?.length === 0 ? (\n        <IsTitleListEmpty>Your contact list is empty :(</IsTitleListEmpty>\n      ) : (\n        <ContactList>\n          {getVisibleContacts\n            ?.map(({ name, id, number }) => {\n              return (\n                <ContactItem key={id} name={name} number={number} id={id} />\n              );\n            })\n            ?.sort((a, b) => a.props.name.localeCompare(b.props.name))}\n        </ContactList>\n      )}\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onChange: PropTypes.func,\n};\n","import { useMemo } from 'react';\nimport { useContacts } from './useContacts';\nimport { useFilter } from './useFilter';\n\nexport function useFilteredContacts() {\n  const { contacts } = useContacts();\n  const { filter } = useFilter();\n\n  const getVisibleContacts = useMemo(() => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  }, [contacts, filter]);\n\n  return { getVisibleContacts };\n}\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  @media screen and (min-width: 1200px) {\n    position: relative;\n    display: block;\n    text-align: center;\n    border: 1px solid rgb(21, 101, 192);\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 7px;\n    padding: 20px;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n    line-height: 1.16;\n    letter-spacing: 0.01em;\n    color: #757575;\n    margin-bottom: 4px;\n    margin-right: 10px;\n  }\n`;\n\nexport const FormInput = styled.input`\n  @media screen and (min-width: 1200px) {\n    border-radius: 4px;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    margin: 0 auto;\n    height: 30px;\n    padding-left: 10px;\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  @media screen and (min-width: 1200px) {\n    padding: 24px;\n    text-align: center;\n    width: 400px;\n    position: sticky;\n    top: 0;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  @media screen and (min-width: 1200px) {\n    width: 450px;\n  }\n`;\n\nexport const Btn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  box-sizing: border-box;\n  background-color: transparent;\n  outline: 0;\n  border: 0;\n  margin: 0;\n  border-radius: 0;\n  padding: 0;\n  cursor: pointer;\n  user-select: none;\n  vertical-align: middle;\n  text-decoration: none;\n  color: inherit;\n  font-weight: 500;\n  font-size: 1.125rem;\n  line-height: 1.75;\n  text-transform: uppercase;\n  width: 200px;\n  padding: 6px 16px;\n  border-radius: 4px;\n  color: #fff;\n  background-color: #1976d2;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%),\n    0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\n  margin-top: 10px;\n  color: #1565c0;\n  background: transparent;\n  border: 2px solid #1565c0;\n  &:hover {\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n      0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  }\n  @media screen and (min-width: 1200px) {\n    width: 300px;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  FormWrapper,\n  ButtonWrapper,\n  Wrapper,\n  Btn,\n} from './AddContactForm.styled';\nimport { useContacts } from 'components/hooks/useContacts';\nimport { Notify } from 'notiflix';\nimport { useAddContactMutation } from 'redux/contacts/contactsApi';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport useToggle from 'components/hooks/useToggle';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nexport default function AddContactForm() {\n  const { isOpen, toggle } = useToggle();\n  const [state, setState] = useState(initialState);\n  const { contacts } = useContacts();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    setState(prevState => {\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const { name, number } = state;\n    if (isDuplicateContact({ name })) {\n      return Notify.info(`${name} is already on your contact list`);\n    }\n    if (name === '' || number === '') {\n      return;\n    }\n\n    try {\n      await addContact({ name, number });\n      Notify.success(`${name} added to your contact list`);\n      reset();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function isDuplicateContact({ name }) {\n    return contacts.find(contact => contact.name === name);\n  }\n\n  function reset() {\n    setState({ name: '', number: '' });\n  }\n\n  return (\n    <Wrapper>\n      <ButtonWrapper>\n        {!isOpen ? (\n          <Btn onClick={toggle} variant=\"contained\">\n            {isOpen ? 'Cancel' : 'add contact'}\n          </Btn>\n        ) : (\n          <FormWrapper onSubmit={handleSubmit}>\n            <div>\n              <TextField\n                style={{ minWidth: '250px' }}\n                id=\"standard-basic\"\n                label=\"Name\"\n                variant=\"standard\"\n                onChange={handleChange}\n                type=\"text\"\n                name=\"name\"\n                value={state.name}\n              />\n            </div>\n            <div>\n              <TextField\n                style={{\n                  minWidth: '250px',\n                }}\n                id=\"standard-basic\"\n                label=\"Number\"\n                variant=\"standard\"\n                onChange={handleChange}\n                type=\"tel\"\n                name=\"number\"\n                value={state.number}\n              />\n            </div>\n\n            <Button\n              style={{ marginRight: '10px', marginTop: '20px', width: '150px' }}\n              variant=\"contained\"\n              type=\"submit\"\n            >\n              {isLoading ? 'load' : 'Add '}\n            </Button>\n            <Button\n              style={{ marginTop: '20px', width: '150px' }}\n              variant=\"outlined\"\n              type=\"button\"\n              onClick={toggle}\n            >\n              cancel\n            </Button>\n          </FormWrapper>\n        )}\n      </ButtonWrapper>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  gap: 24px;\n  height: 100%;\n  @media screen and (min-width: 1200px) {\n    display: flex;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: center;\n  @media screen and (min-width: 1200px) {\n    border-right: 2px solid #757575;\n  }\n`;\n","import ContactsList from 'components/contactsList/ContactsList';\nimport AddContactForm from 'components/form/AddContactForm';\nimport Section from 'components/section/Section';\nimport React from 'react';\nimport { Wrapper, Box } from './Contacts.styled';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Section>\n        <Wrapper>\n          <Box>\n            <AddContactForm />\n          </Box>\n          <div style={{ flexGrow: '1' }}>\n            <ContactsList />\n          </div>\n        </Wrapper>\n      </Section>\n    </>\n  );\n}\n"],"names":["ContactList","styled","InputBox","IsTitleListEmpty","useFilter","filter","useSelector","state","value","dispatch","useDispatch","onSetFilter","data","setFilter","useContacts","useGetContactsQuery","contacts","isLoading","isFetching","Item","Text","BtnDelete","EditSvg","FaUserEdit","DeleteSvg","RiDeleteBinLine","Box","useToggle","useState","isOpen","setIsOpen","toggle","Form","style","position","top","left","transform","width","height","bgcolor","border","borderRadius","boxShadow","p","theme","createTheme","typography","fontFamily","join","fontSize","ChangeContact","nameContact","numberContact","id","useUpdateContactMutation","updateContact","name","setName","number","options","onChange","target","e","preventDefault","Notify","console","log","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","sx","onSubmit","ThemeProvider","TextField","marginBottom","padding","label","variant","type","Button","marginRight","marginTop","onClick","stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","BasicAvatar","props","Avatar","nameSplit","split","children","stringAvatar","ContactItem","useDeleteContactMutation","deleteContact","alt","src","href","removeContact","memo","ContactsList","getVisibleContacts","useMemo","normalizeFilter","toLowerCase","contact","includes","useFilteredContacts","currentTarget","map","sort","a","b","localeCompare","FormWrapper","ButtonWrapper","Wrapper","Btn","initialState","AddContactForm","setState","useAddContactMutation","addContact","handleChange","prevState","isDuplicateContact","reset","find","minWidth","Contacts","Section","flexGrow"],"sourceRoot":""}