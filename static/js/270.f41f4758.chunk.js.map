{"version":3,"file":"static/js/270.f41f4758.chunk.js","mappings":"4LAEaA,E,QAAaC,GAAAA,QAAH,4G,SCAR,SAASC,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SAChC,OAAO,SAACH,EAAD,UAAaG,GACrB,C,iGCFYC,EAAYH,EAAAA,GAAAA,GAAH,6DAKTI,EAAcJ,EAAAA,GAAAA,MAAH,6MAWXK,EAAcL,EAAAA,GAAAA,GAAH,8J,oBCfjB,SAASM,IACd,IAAMC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,OAAOG,KAAjB,IAC1BC,GAAWC,EAAAA,EAAAA,MAMjB,MAAO,CAAEL,OAAAA,EAAQM,YAJjB,SAAqBC,GACnBH,GAASI,EAAAA,EAAAA,GAAUD,GACpB,EAGF,C,wBCVM,SAASE,IACd,OAAkDC,EAAAA,EAAAA,MAElD,MAAO,CAAEC,SAFT,EAAQJ,KAEWK,UAFnB,EAAwBA,UAEMC,WAF9B,EAAmCA,WAGpC,C,0DCJYC,EAAOrB,EAAAA,GAAAA,GAAH,8LAUJsB,EAAOtB,EAAAA,GAAAA,EAAH,6EAMJuB,EAAYvB,EAAAA,GAAAA,OAAH,gR,mBCXtB,SAASwB,EAAT,GAA4C,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,OAAQC,EAAM,EAANA,GACnC,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBV,EAAxB,KAAwBA,UADiB,wCAGzC,uGAEUU,EAAcF,GAFxB,OAGIG,EAAAA,OAAAA,KAAA,UAAeL,EAAf,sBAHJ,+CAKIM,QAAQC,IAAR,MALJ,yDAHyC,sBAYzC,OACE,UAACX,EAAD,YACE,UAACC,EAAD,WACGG,EADH,KACWC,MAEX,SAACH,EAAD,CAAWU,KAAK,SAASC,QAAS,kBAjBG,0CAiBGC,CAAcR,EAApB,EAAlC,SACGR,EAAY,UAAW,SAAC,MAAD,QAI/B,CAED,OAAeiB,EAAAA,EAAAA,MAAKZ,GCxBL,SAASa,IACtB,MAAgC/B,IAAxBC,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,YAChB,ECLK,WACL,IAAQK,EAAaF,IAAbE,SACAX,EAAWD,IAAXC,OASR,MAAO,CAAE+B,oBAPkBC,EAAAA,EAAAA,UAAQ,WACjC,IAAMC,EAAkBjC,EAAOkC,cAC/B,cAAOvB,QAAP,IAAOA,OAAP,EAAOA,EAAUX,QAAO,SAAAmC,GAAO,OAC7BA,EAAQjB,KAAKgB,cAAcE,SAASH,EADP,GAGhC,GAAE,CAACtB,EAAUX,IAGf,CDPgCqC,GAAvBN,EAAR,EAAQA,mBACAlB,EAAeJ,IAAfI,WAMR,OACE,iCACE,SAACjB,EAAD,wBAEA,SAACC,EAAD,CAAa6B,KAAK,OAAOvB,MAAOH,EAAQsC,SAR5C,SAAsBC,GACpB,IAAQpC,EAAUoC,EAAEC,cAAZrC,MACRG,EAAYH,EACb,IAOIU,IAAc,qCACiB,KAAb,OAAlBkB,QAAkB,IAAlBA,OAAA,EAAAA,EAAoBU,SACnB,mCAEA,SAAC3C,EAAD,iBACGiC,QADH,IACGA,OADH,EACGA,EAAoBW,KAAI,YAA2B,IAAxBxB,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,GAAID,EAAa,EAAbA,OACpC,OAAO,SAAC,EAAD,CAAsBD,KAAMA,EAAMC,OAAQA,EAAQC,GAAIA,GAApCA,EAC1B,QAKV,C,gCEhCYuB,EAAclD,EAAAA,GAAAA,KAAH,2CAIXmD,EAAYnD,EAAAA,GAAAA,MAAH,8JASToD,EAAYpD,EAAAA,GAAAA,MAAH,qNAWTqD,EAAarD,EAAAA,GAAAA,OAAH,uaCfjBsD,EAAe,CACnB7B,KAAM,GACNC,OAAQ,IAGK,SAAS6B,IACtB,OAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAO7C,EAAP,KAAcgD,EAAd,KACQvC,EAAaF,IAAbE,SACR,GAAoCwC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqBxC,EAArB,KAAqBA,UAErB,SAASyC,EAAad,GACpB,MAAwBA,EAAEC,cAAlBtB,EAAR,EAAQA,KAAMf,EAAd,EAAcA,MACd+C,GAAS,SAAAI,GACP,OAAO,kBACFA,GADL,cAEGpC,EAAOf,GAEX,GACF,CAbsC,wCAevC,WAA4BoC,GAA5B,4EACEA,EAAEgB,iBACMrC,EAAiBhB,EAAjBgB,KAAMC,EAAWjB,EAAXiB,QACVqC,EAAmB,CAAEtC,KAAAA,EAAMC,OAAAA,IAHjC,yCAIWI,EAAAA,OAAAA,KAAA,UAAeL,EAAf,aAAwBC,EAAxB,sCAJX,gCAOUiC,EAAW,CAAElC,KAAAA,EAAMC,OAAAA,IAP7B,OAQII,EAAAA,OAAAA,QAAA,UAAkBL,EAAlB,gCACAuC,IATJ,kDAWIjC,QAAQC,IAAR,MAXJ,2DAfuC,sBA8BvC,SAAS+B,EAAT,GAA+C,IAAjBtC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OAClC,OAAOR,EAAS+C,MACd,SAAAvB,GAAO,OAAIA,EAAQjB,OAASA,GAAQiB,EAAQhB,SAAWA,CAAhD,GAEV,CAED,SAASsC,IACPP,EAAS,CAAEhC,KAAM,GAAIC,OAAQ,IAC9B,CAED,OACE,UAACwB,EAAD,CAAagB,SAzCwB,4CAyCrC,WACE,UAACf,EAAD,CAAWgB,QAAQ,GAAnB,kBACQ,KACN,SAACf,EAAD,CACEP,SAAUe,EACV3B,KAAK,OACLR,KAAK,OACLf,MAAOD,EAAMgB,KACb2C,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAACnB,EAAD,CAAWgB,QAAQ,GAAnB,oBACU,KACR,SAACf,EAAD,CACEP,SAAUe,EACV3B,KAAK,MACLR,KAAK,SACLf,MAAOD,EAAMiB,OACb0C,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAACjB,EAAD,CAAYpB,KAAK,SAASsC,SAAUpD,EAApC,SACGA,EAAY,OAAS,kBAI7B,C,cClFc,SAASqD,IACtB,OACE,iCACE,SAACvE,EAAA,EAAD,WACE,SAACsD,EAAD,OAEF,SAACtD,EAAA,EAAD,WACE,SAACoC,EAAD,QAIP,C","sources":["components/section/Section.styled.jsx","components/section/Section.jsx","components/contactsList/ContactsList.styled.jsx","components/hooks/useFilter.js","components/hooks/useContacts.js","components/contactItem/ContactItem.styled.jsx","components/contactItem/ContactItem.jsx","components/contactsList/ContactsList.jsx","components/hooks/useFilteredContacts.js","components/form/AddContactForm.styled.jsx","components/form/AddContactForm.jsx","pages/ContactsPage/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionBox = styled.section`\n  width: 1200px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n`;\n","import { SectionBox } from './Section.styled';\n\nexport default function Section({ children }) {\n  return <SectionBox>{children}</SectionBox>;\n}\n","import styled from 'styled-components';\n\nexport const TitleList = styled.h1`\n  margin-top: 0;\n  color: #757575;\n`;\n\nexport const SearchInput = styled.input`\n  border-radius: 4px;\n  width: 200px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  margin: 0 auto;\n  height: 30px;\n  padding-left: 10px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const ContactList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 25px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nexport function useFilter() {\n  const filter = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  function onSetFilter(data) {\n    dispatch(setFilter(data));\n  }\n\n  return { filter, onSetFilter };\n}\n","import { useGetContactsQuery } from 'redux/contacts/contactsApi';\n\nexport function useContacts() {\n  const { data: contacts, isLoading, isFetching } = useGetContactsQuery();\n\n  return { contacts, isLoading, isFetching };\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  text-align: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(33, 33, 33, 0.2);\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  color: #757575;\n  font-size: 20px;\n`;\n\nexport const BtnDelete = styled.button`\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  font-size: 20px;\n  cursor: pointer;\n  text-align: center;\n  color: #757575;\n  transition: transform 250ms;\n\n  :hover {\n    color: black;\n    transform: scale(1.3);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { Item, Text, BtnDelete } from './ContactItem.styled';\nimport { Notify } from 'notiflix';\nimport { memo } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\n\nfunction ContactItem({ name, number, id }) {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  async function removeContact() {\n    try {\n      await deleteContact(id);\n      Notify.info(`${name} has been deleted`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <Item>\n      <Text>\n        {name}: {number}\n      </Text>\n      <BtnDelete type=\"button\" onClick={() => removeContact(id)}>\n        {isLoading ? 'remove' : <RiDeleteBinLine />}\n      </BtnDelete>\n    </Item>\n  );\n}\n\nexport default memo(ContactItem);\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  removeContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { TitleList, SearchInput, ContactList } from './ContactsList.styled';\nimport { useFilter } from 'components/hooks/useFilter';\nimport { useFilteredContacts } from 'components/hooks/useFilteredContacts';\nimport ContactItem from 'components/contactItem/ContactItem';\nimport { useContacts } from 'components/hooks/useContacts';\n\nexport default function ContactsList() {\n  const { filter, onSetFilter } = useFilter();\n  const { getVisibleContacts } = useFilteredContacts();\n  const { isFetching } = useContacts();\n\n  function changeFilter(e) {\n    const { value } = e.currentTarget;\n    onSetFilter(value);\n  }\n  return (\n    <>\n      <TitleList>Contacts</TitleList>\n\n      <SearchInput type=\"text\" value={filter} onChange={changeFilter} />\n\n      {isFetching && <div>...load</div>}\n      {getVisibleContacts?.length === 0 ? (\n        <div>zero</div>\n      ) : (\n        <ContactList>\n          {getVisibleContacts?.map(({ name, id, number }) => {\n            return <ContactItem key={id} name={name} number={number} id={id} />;\n          })}\n        </ContactList>\n      )}\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onChange: PropTypes.func,\n};\n","import { useMemo } from 'react';\nimport { useContacts } from './useContacts';\nimport { useFilter } from './useFilter';\n\nexport function useFilteredContacts() {\n  const { contacts } = useContacts();\n  const { filter } = useFilter();\n\n  const getVisibleContacts = useMemo(() => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  }, [contacts, filter]);\n\n  return { getVisibleContacts };\n}\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  display: block;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 20px;\n  line-height: 1.16;\n  letter-spacing: 0.01em;\n  color: #757575;\n  margin-bottom: 4px;\n  margin-right: 10px;\n`;\n\nexport const FormInput = styled.input`\n  /* display: block; */\n  border-radius: 4px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  margin: 0 auto;\n  height: 30px;\n  padding-left: 10px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const FormButton = styled.button`\n  font-family: inherit;\n  width: 150px;\n  height: 40px;\n  color: #fff;\n  background-color: #2196f3;\n  font-size: 16px;\n  line-height: 1.87;\n  letter-spacing: 0.06em;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 4px;\n  border: transparent;\n  margin: 0 auto;\n  cursor: pointer;\n  transition: 250ms;\n  :hover {\n    color: #2196f3;\n    background-color: lightblue;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  FormWrapper,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './AddContactForm.styled';\nimport { useContacts } from 'components/hooks/useContacts';\nimport { Notify } from 'notiflix';\nimport { useAddContactMutation } from 'redux/contacts/contactsApi';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nexport default function AddContactForm() {\n  const [state, setState] = useState(initialState);\n  const { contacts } = useContacts();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    setState(prevState => {\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const { name, number } = state;\n    if (isDuplicateContact({ name, number })) {\n      return Notify.info(`${name}: ${number} is already on your contact list`);\n    }\n    try {\n      await addContact({ name, number });\n      Notify.success(`${name} added to your contact list`);\n      reset();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function isDuplicateContact({ name, number }) {\n    return contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n  }\n\n  function reset() {\n    setState({ name: '', number: '' });\n  }\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <FormLabel htmlFor=\"\">\n        Name:{' '}\n        <FormInput\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={state.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel htmlFor=\"\">\n        Number:{' '}\n        <FormInput\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={state.number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'load' : 'Add contact'}\n      </FormButton>\n    </FormWrapper>\n  );\n}\n","import ContactsList from 'components/contactsList/ContactsList';\nimport AddContactForm from 'components/form/AddContactForm';\nimport Section from 'components/section/Section';\nimport React from 'react';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Section>\n        <AddContactForm />\n      </Section>\n      <Section>\n        <ContactsList />\n      </Section>\n    </>\n  );\n}\n"],"names":["SectionBox","styled","Section","children","TitleList","SearchInput","ContactList","useFilter","filter","useSelector","state","value","dispatch","useDispatch","onSetFilter","data","setFilter","useContacts","useGetContactsQuery","contacts","isLoading","isFetching","Item","Text","BtnDelete","ContactItem","name","number","id","useDeleteContactMutation","deleteContact","Notify","console","log","type","onClick","removeContact","memo","ContactsList","getVisibleContacts","useMemo","normalizeFilter","toLowerCase","contact","includes","useFilteredContacts","onChange","e","currentTarget","length","map","FormWrapper","FormLabel","FormInput","FormButton","initialState","AddContactForm","useState","setState","useAddContactMutation","addContact","handleChange","prevState","preventDefault","isDuplicateContact","reset","find","onSubmit","htmlFor","pattern","title","required","disabled","Contacts"],"sourceRoot":""}