{"version":3,"file":"static/js/674.fb54e0a6.chunk.js","mappings":"2YAiBMA,GAAQC,EAAAA,EAAAA,KAEC,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA0CJ,EAAAA,EAAAA,WAAS,GAAnD,eAAOK,EAAP,KAAsBC,EAAtB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAoCR,EAAAA,EAAAA,WAAS,GAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAU,CAAEN,MAAOC,EAAUL,SAAUC,GAE7C,SAASU,EAAT,GAAgD,IAAD,IAA3BC,OAAUC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAClCJ,EAAQG,GAAMC,EAAMC,cACrB,CAED,IAAMC,EAAY,mCAAG,WAAMC,GAAN,0EACnBA,EAAMC,iBACAC,EAAO,IAAIC,SAASH,EAAMI,eAElB,KAAVjB,EAJe,uBAKjBG,GAAc,GALG,0BAQjBA,GAAc,GARG,UAWF,KAAbP,EAXe,wBAYjBG,GAAiB,GAZA,2BAejBA,GAAiB,GAfA,yBAkBDK,EAChBc,EAAAA,EAAAA,MAAqB,CACnBlB,MAAOe,EAAKI,IAAI,SAChBvB,SAAUmB,EAAKI,IAAI,eArBJ,QAyBQ,MAzBR,OAyBXC,QAAQC,QACd1B,EAAS,8CA1BQ,4CAAH,sDA8BlB,OACE,SAAC,IAAD,CAAeL,MAAOA,EAAtB,UACE,UAAC,IAAD,CAAWgC,UAAU,OAAOC,SAAS,KAArC,WACE,SAAC,KAAD,KACA,UAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CAAQJ,GAAI,CAAEK,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAAC,IAAD,OAEF,SAAC,IAAD,CAAYR,UAAU,KAAKS,QAAQ,KAAnC,sBAGA,UAAC,IAAD,CACET,UAAU,OACVU,SAAUpB,EACVqB,YAAU,EACVT,GAAI,CAAEU,GAAI,GAJZ,UAMGxC,IACC,SAAC,IAAD,CAAOqC,QAAQ,WAAWI,SAAS,QAAnC,SACGzC,KAIL,SAAC,IAAD,CACEA,MAAOQ,EACPkC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACN/B,KAAK,QACLgC,aAAa,QACbC,WAAS,EACTnC,SAAUA,KAEZ,SAAC,IAAD,CACEb,MAAOI,EACPsC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT7B,KAAK,WACL+B,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHE,aAAa,mBACblC,SAAUA,KAMZ,SAAC,IAAD,CACEoC,KAAK,SACLL,WAAS,EACTP,QAAQ,YACRP,GAAI,CAAEU,GAAI,EAAGU,GAAI,GAJnB,sBAQA,SAAC,KAAD,CAAMC,WAAS,EAAf,UAME,SAAC,KAAD,CAAMC,MAAI,EAAV,UACE,SAAC,IAAD,CAAMC,KAAK,WAAWhB,QAAQ,QAA9B,SACG,iDASlB,C","sources":["pages/LoginPage/LogInForm.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useState } from 'react';\nimport Alert from '@mui/material/Alert';\n\nconst theme = createTheme();\n\nexport default function LogInForm() {\n  const [error, setError] = useState(null);\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState(false);\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const dispatch = useDispatch();\n\n  const options = { email: setEmail, password: setPassword };\n\n  function onChange({ target: { name, value } }) {\n    options[name](value.toLowerCase());\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    if (email === '') {\n      setEmailError(true);\n      return;\n    } else {\n      setEmailError(false);\n    }\n\n    if (password === '') {\n      setPasswordError(true);\n      return;\n    } else {\n      setPasswordError(false);\n    }\n\n    const res = await dispatch(\n      authOperations.logIn({\n        email: data.get('email'),\n        password: data.get('password'),\n      })\n    );\n\n    if (res.payload.status === 400) {\n      setError('User with this Email or Password not found');\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            {error && (\n              <Alert variant=\"outlined\" severity=\"error\">\n                {error}\n              </Alert>\n            )}\n\n            <TextField\n              error={emailError}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={onChange}\n            />\n            <TextField\n              error={passwordError}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={onChange}\n            />\n            {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              {/* <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid> */}\n              <Grid item>\n                <Link href=\"register\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\n// export default function LogInForm() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const dispatch = useDispatch();\n\n//   const options = { email: setEmail, password: setPassword };\n\n//   function onChange({ target: { name, value } }) {\n//     options[name](value);\n//   }\n\n//   function onSubmit(e) {\n//     e.preventDefault();\n//     dispatch(authOperations.logIn({ email, password }));\n//   }\n//   return (\n//     <>\n//       <form onSubmit={onSubmit}>\n//         <label>\n//           Email{' '}\n//           <input type=\"email\" name=\"email\" value={email} onChange={onChange} />\n//         </label>\n//         <label>\n//           Password{' '}\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             value={password}\n//             onChange={onChange}\n//           />\n//         </label>\n//         <button type=\"submit\">submit</button>\n//       </form>\n//     </>\n//   );\n// }\n"],"names":["theme","createTheme","LogInForm","useState","error","setError","password","setPassword","passwordError","setPasswordError","email","setEmail","emailError","setEmailError","dispatch","useDispatch","options","onChange","target","name","value","toLowerCase","handleSubmit","event","preventDefault","data","FormData","currentTarget","authOperations","get","payload","status","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","onSubmit","noValidate","mt","severity","margin","required","fullWidth","id","label","autoComplete","autoFocus","type","mb","container","item","href"],"sourceRoot":""}